/// <reference types="node" />
import * as shared from '@volar/shared';
import * as vscode from 'vscode-languageserver';
import * as vue from '@volar/vue-language-service';
import type { FileSystemProvider } from 'vscode-html-languageservice';
export interface RuntimeEnvironment {
    loadTypescript: (initOptions: shared.ServerInitializationOptions) => typeof import('typescript/lib/tsserverlibrary');
    loadTypescriptLocalized: (initOptions: shared.ServerInitializationOptions) => any;
    schemaRequestHandlers: {
        [schema: string]: (uri: string, encoding?: BufferEncoding) => Promise<string>;
    };
    onDidChangeConfiguration?: (settings: any) => void;
    fileSystemProvide: FileSystemProvider | undefined;
}
export declare function createLanguageServer(connection: vscode.Connection, runtimeEnv: RuntimeEnvironment): void;
export declare function loadCustomPlugins(dir: string): vue.EmbeddedLanguageServicePlugin[];
