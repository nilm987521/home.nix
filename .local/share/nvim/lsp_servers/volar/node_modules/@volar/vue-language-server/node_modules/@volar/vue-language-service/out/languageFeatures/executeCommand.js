"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.register = exports.executePluginCommand = void 0;
exports.executePluginCommand = 'volar.executtePluginCommand';
function register(context) {
    return (command, args, executeCommandContext) => __awaiter(this, void 0, void 0, function* () {
        var _a, _b;
        if (command === exports.executePluginCommand) {
            const [_uri, pluginId, originalCommand] = args;
            if (pluginId !== undefined) {
                const plugin = context.getPluginById(pluginId);
                yield ((_a = plugin === null || plugin === void 0 ? void 0 : plugin.doExecuteCommand) === null || _a === void 0 ? void 0 : _a.call(plugin, originalCommand.command, originalCommand.arguments, executeCommandContext));
            }
            else {
                for (const plugin of context.getPlugins()) {
                    yield ((_b = plugin.doExecuteCommand) === null || _b === void 0 ? void 0 : _b.call(plugin, originalCommand.command, originalCommand.arguments, executeCommandContext));
                }
            }
        }
    });
}
exports.register = register;
//# sourceMappingURL=executeCommand.js.map