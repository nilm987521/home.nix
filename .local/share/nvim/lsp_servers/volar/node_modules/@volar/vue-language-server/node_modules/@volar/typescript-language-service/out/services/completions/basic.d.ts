import type * as ts from 'typescript/lib/tsserverlibrary';
import * as vscode from 'vscode-languageserver-protocol';
import type { TextDocument } from 'vscode-languageserver-textdocument';
import { Settings } from '../..';
export interface Data {
    uri: string;
    fileName: string;
    offset: number;
    originalItem: ts.CompletionEntry;
}
export declare function register(languageService: ts.LanguageService, getTextDocument: (uri: string) => TextDocument | undefined, settings: Settings, ts: typeof import('typescript/lib/tsserverlibrary')): (uri: string, position: vscode.Position, options?: ts.GetCompletionsAtPositionOptions) => Promise<vscode.CompletionList | undefined>;
export declare function handleKindModifiers(item: vscode.CompletionItem, tsEntry: ts.CompletionEntry | ts.CompletionEntryDetails): void;
