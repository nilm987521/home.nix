"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
const rename_1 = require("./rename");
function register(context) {
    return (item) => __awaiter(this, void 0, void 0, function* () {
        var _a, _b, _c;
        const data = item.data;
        if (data) {
            const plugin = context.getPluginById(data.pluginId);
            if (!plugin)
                return item;
            if (!((_a = plugin.codeAction) === null || _a === void 0 ? void 0 : _a.resolve))
                return item;
            const originalItem = data.originalItem;
            if (data.sourceMap) {
                const sourceMap = context.vueDocuments.sourceMapFromEmbeddedDocumentUri(data.sourceMap.embeddedDocumentUri);
                if (sourceMap) {
                    const resolvedItem = yield ((_b = plugin.codeAction) === null || _b === void 0 ? void 0 : _b.resolve(originalItem));
                    if (resolvedItem.edit) {
                        const edit = (0, rename_1.embeddedEditToSourceEdit)(resolvedItem.edit, context.vueDocuments);
                        if (edit) {
                            resolvedItem.edit = edit;
                            return resolvedItem;
                        }
                    }
                }
            }
            else {
                return yield ((_c = plugin.codeAction) === null || _c === void 0 ? void 0 : _c.resolve(originalItem));
            }
        }
        return item;
    });
}
exports.register = register;
//# sourceMappingURL=codeActionResolve.js.map