import type { TextDocument } from 'vscode-languageserver-textdocument';
import * as vscode from 'vscode-languageserver-protocol';
import * as ts2 from '@volar/typescript-language-service';
import type * as ts from 'typescript/lib/tsserverlibrary';
import { EmbeddedLanguageServicePlugin } from '@volar/vue-language-service-types';
export default function (options: {
    ts: typeof import('typescript/lib/tsserverlibrary');
    getTsLs: () => ts2.LanguageService;
}): EmbeddedLanguageServicePlugin;
export declare function isCharacterTyping(document: TextDocument, options: Parameters<NonNullable<EmbeddedLanguageServicePlugin['doAutoInsert']>>[2]): boolean;
export declare function isBlacklistNode(ts: typeof import('typescript/lib/tsserverlibrary'), node: ts.Node, pos: number): boolean;
export declare function isRefType(typeDefs: vscode.LocationLink[], tsLs: ts2.LanguageService): boolean;
